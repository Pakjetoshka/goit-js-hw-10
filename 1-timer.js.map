{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector(\".input-text\");\nconst startBtn = document.querySelector(\"[data-start]\");\nconst daysEl = document.querySelector(\"[data-days]\");\nconst hoursEl = document.querySelector(\"[data-hours]\");\nconst minutesEl = document.querySelector(\"[data-minutes]\");\nconst secondsEl = document.querySelector(\"[data-seconds]\");\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate < Date.now()) {\n      iziToast.error({\n        title: `Error`,\n        message: `Please choose a date in the future`,\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartBtn.addEventListener(\"click\", startTimer);\n\nfunction startTimer() {\n  input.disabled = true;\n  startBtn.disabled = true;\n\n  timerId = setInterval(() => {\n    const currentTime = Date.now();\n    const timeRemaining = userSelectedDate - currentTime;\n\n    if (timeRemaining <= 0) {\n      clearInterval(timerId);\n      iziToast.success({\n        title: \"Success\",\n        message: \"Countdown finished!\",\n      });\n      return;\n    }\n\n    updateTimer(convertMs(timeRemaining));\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}"],"names":["input","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","startTimer","currentTime","timeRemaining","updateTimer","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"0IAKA,MAAMA,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,EAAe,KAAK,OACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBK,EAAmBI,EAEtB,CACH,EAEAE,EAAU,mBAAoBJ,CAAO,EAErCP,EAAS,iBAAiB,QAASY,CAAU,EAE7C,SAASA,GAAa,CACpBb,EAAM,SAAW,GACjBC,EAAS,SAAW,GAEpBM,EAAU,YAAY,IAAM,CAC1B,MAAMO,EAAc,KAAK,MACnBC,EAAgBT,EAAmBQ,EAEzC,GAAIC,GAAiB,EAAG,CACtB,cAAcR,CAAO,EACrBI,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qBACjB,CAAO,EACD,MACD,CAEDK,EAAYC,EAAUF,CAAa,CAAC,CACrC,EAAE,GAAI,CACT,CAEA,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAY,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDpB,EAAO,YAAcqB,EAAeJ,CAAI,EACxChB,EAAQ,YAAcoB,EAAeH,CAAK,EAC1ChB,EAAU,YAAcmB,EAAeF,CAAO,EAC9ChB,EAAU,YAAckB,EAAeD,CAAO,CAChD"}